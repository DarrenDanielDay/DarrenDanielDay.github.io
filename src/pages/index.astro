---
import Page from "../layouts/Page.astro";
import Card from "../components/Card.astro";
import type { MyFrontMatter } from "../scripts/util";
import Footer from "../components/Footer.astro";
import ToggleTheme from "../components/ToggleTheme.astro";
import ToggleButton from "../components/ToggleButton.astro";
import Link from "../components/Link.astro";
const posts = await Astro.glob<MyFrontMatter>("./posts/*/index.mdx");
const repo = (name: string) => {
  return `https://github.com/DarrenDanielDay/${name}`;
};
---

<Page title="Darren Daniel Day's personal index">
  <ToggleTheme />
  <ToggleButton
    id="no-animation"
    normalIcon="fast-arrow"
    checkedIcon="replay"
    style="position: absolute; top: 1em; left: 1em; z-index: 1;"
    title="动画选项（加载是假的哈哈）"
  />
  <main>
    <div class="index-content">
      <h1>
        <span class="greet-1">嗨，</span><span class="greet-2 text-gradient">别来无恙啊！</span>
      </h1>
      <h2>
        <span class="greet-3">我们为您准备了一些<span class="text-gradient"> 有趣的内容</span>。</span>
      </h2>
      <h3 class="removed">
        <span class="greet-4">正在获取数据，请勿刷新浏览器。</span><br />
        <span class="greet-5">精彩即将呈现。</span>
      </h3>
      <ul role="list" class="link-card-grid">
        {
          posts
            .sort((a, b) => new Date(b.frontmatter.pubDate).getTime() - new Date(a.frontmatter.pubDate).getTime())
            .slice(0, 10)
            .map((post) => (
              <Card href={post.url ?? "/"} body={post.frontmatter.description} title={post.frontmatter.title} />
            ))
        }
        <Card
          href="/Libra"
          title="Libra - 一个称次品问题的求解模型"
          body="12 个乒乓球，有一个次品，不知轻重，用一台无砝码天平称三次，找出次品，告知轻重？"
        />
        <Card
          href="/es-modularize"
          title="es-modularize - 将npm包在浏览器内加载为esmodule"
          body="用了它以后，Angular项目都只剩下30KB了！"
        />
        <Card href="/gizmo-ball-react" title="Gizmo Ball - 一个简单的2D物理弹球游戏" body="见过200行的纯函数吗？" />
        <Card
          href={repo("func-di")}
          title="func-di - 一个函数式依赖注入库"
          body="零依赖，没有class，没有装饰器，不可变，类型安全。"
        />
        <Card
          href={repo("script-plus")}
          title="script-plus - 一个vscode的脚本运行插件"
          body="用过vscode版的Tampermonkey吗？"
        />
        <Card
          href={repo("css-module-types-and-map")}
          title="css-module-types-and-map - 一个vscode的css module插件"
          body="为css module生成TypeScript类型定义，但是居然能跳转到样式代码？"
        />
        <Card href="/life-game" title="Life Game - 计算机科学经典的自动机" body="但是这一回，用React来写！" />
        <Card
          href="/china-address-search"
          title="china-address-search - 一个地址模糊搜索算法"
          body="虽然算法很暴力，但是有用。"
        />
        <Card
          href={repo("leetcode-typescript-workspace")}
          title="leetcode-typescript-workspace - 前端力扣刷题神器"
          body="自从用了这个，用TypeScript刷力扣再也不用提交到在线去debug了！"
        />
        <Card
          href={repo("typescript-programming-redefined")}
          title="typescript-programming-redefined - TypeScript进阶"
          body="TypeScript进阶与类型体操，看这一篇就够了！"
        />
      </ul>
    </div>
  </main>
  <Footer>
    <span slot="thanks-to">
      <Link href="https://iconscout.com/icons/fast-arrow" target="_blank">Fast arrow Icon</Link> by <Link
        href="https://iconscout.com/contributors/anggavisual93"
        target="_blank">Angga Yudotomo</Link
      >
      <Link href="https://iconscout.com/icons/replay" target="_blank">Replay Icon</Link> on <Link
        href="https://iconscout.com">IconScout</Link
      >
    </span>
  </Footer>
</Page>

<style lang="scss">
  @use "sass:list";
  @import "../styles/utils.scss";
  :global(html) {
    @include sm() {
      font-size: 12px;
    }
  }
  // @import "../styles/theme.scss";
  h1,
  h2,
  h3 {
    > span {
      display: inline-block;
    }
  }
  h1 {
    font-size: 3rem;
    font-weight: 800;
    margin: 0;
  }

  main {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100%;
    overflow: hidden;
    padding: 0 4em;
    .index-content {
      max-width: 60ch;
      margin-bottom: 2em;
    }
  }
  .link-card-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: 1rem;
    padding: 0;
  }
  @keyframes cutin {
    from {
      opacity: 0;
      transform: scale(0.5);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }
  @keyframes slidein-left {
    from {
      opacity: 0;
      transform: translateX(-100%);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }
  @keyframes slidein-right {
    from {
      opacity: 0;
      transform: translateX(100%);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }
  @keyframes appears {
    from {
      opacity: 0;
      transform: translateY(100%);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  @keyframes removed {
    0% {
    }
    100% {
      opacity: 0;
    }
  }

  @mixin greet-mixin($start-time, $length) {
    animation-duration: $length;
    animation-fill-mode: backwards;
    animation-delay: $start-time;
  }
  @mixin greet-animation() {
    $greets: [1 1 cutin .7s] [2 0.7s slidein-right 1.3s] [3 1s appears 1.3s] [4 1 appears 1.3s] [5 1 appears 1.3s];
    $played: 0s;
    @each $id, $delay, $animation, $duration in $greets {
      .greet-#{$id} {
        @include greet-mixin($played + $delay, $duration);
        animation-name: $animation;
      }
      $played: $played + $delay + $duration;
    }
    .removed {
      user-select: none;
      animation-name: removed;
      animation-delay: $played + 1s;
      animation-duration: 3s;
      animation-fill-mode: both;
    }
    $played: $played + 1s;
    @for $i from 1 through 20 {
      .link-card-grid > :global(li):nth-child(0n + #{$i}) {
        @if $i % 2 == 1 {
          animation-name: slidein-left;
        } @else {
          animation-name: slidein-right;
        }
        animation-duration: 0.7s;
        animation-delay: $played + $i * 0.25s;
        animation-fill-mode: both;
      }
    }
  }
  #no-animation {
    opacity: 0;
    &:not(:checked) {
      ~ main {
        @include greet-animation();
      }
    }
  }
</style>
