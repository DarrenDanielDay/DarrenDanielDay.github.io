---
import { Image as AstroImageComponent } from 'astro:assets';
import type { ImageOutputFormat, ImageTransform } from "astro";
import { isModuleWithDefaultExport, isPromise } from "../scripts/util";
import type { ImgAttributes } from "astro:assets";

export interface Props
  extends Omit<ImageTransform, "src">,
    Omit<ImgAttributes, "src" | "alt" | "width" | "height" | "slot"> {
  src: ImageMetadata | Promise<{ default: ImageMetadata }>;
  format?: ImageOutputFormat;
}
const { src: propSrc, format = "webp", ...others } = Astro.props;

const imageMetaData = await (async () => {
  if (isPromise(propSrc)) {
    const awaited = await propSrc;
    if (!isModuleWithDefaultExport(awaited)) {
      throw new Error("`src` is not a module with default export.");
    }
    return awaited.default;
  }
  return propSrc;
})();
const path = imageMetaData.src;
// 是的，搞这么个组件只是为了少写个无关紧要的alt属性，并且能用相对路径引用图片
const alt = path.split("/").at(-1) ?? path;
---

<AstroImageComponent src={imageMetaData} alt={alt} format={format} {...others} />
